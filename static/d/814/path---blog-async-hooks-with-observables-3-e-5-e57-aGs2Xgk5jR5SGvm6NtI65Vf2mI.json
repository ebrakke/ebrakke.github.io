{"data":{"site":{"siteMetadata":{"title":"erik-brakke-site","author":"Erik Brakke"}},"markdownRemark":{"id":"b81249df-37db-59df-9a7f-ada450f15f9a","excerpt":"I was playing around with the new  React hooks  API and wanted to come up with a way to call async functions from within a functional…","html":"<p>I was playing around with the new <a href=\"https://reactjs.org/docs/hooks-intro.html\">React hooks</a> API and wanted to come up with a way to call async functions from within a functional component. Furthermore, I wanted to give the component control of when to call this async function, and get loading state updates from the hook.</p>\n<p>In essence, this is what I envisioned:</p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> useLazyAsync <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./hooks'</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> getUser <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./user'</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> MyComponent<span class=\"token punctuation\">:</span> React<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">FC</span> <span class=\"token operator\">=</span> props <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> loading<span class=\"token punctuation\">,</span> error<span class=\"token punctuation\">,</span> result<span class=\"token punctuation\">,</span> <span class=\"token keyword\">async</span>$ <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">useLazyAsync</span><span class=\"token punctuation\">(</span>getUser<span class=\"token punctuation\">)</span>\n  <span class=\"token comment\">// Users don't exists, perhaps we load from a cache or something</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>props<span class=\"token punctuation\">.</span>users<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">async</span>$<span class=\"token punctuation\">.</span><span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> loading <span class=\"token operator\">?</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Loading</span> <span class=\"token punctuation\">/></span></span>\n  <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">{</span>result<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">}</span><span class=\"token plain-text\"> users have been loaded!</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>This allows a component to load data on demand, and also have the hook manage the <code class=\"language-text\">loading</code> state. I figured an observables and subjects would be the best way to accomplish this task from within the <code class=\"language-text\">useLazyAsync</code> hook. Here’s the implementation</p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> useState<span class=\"token punctuation\">,</span> useEffect <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Subject <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'rxjs'</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">from</span><span class=\"token punctuation\">,</span> switchMap <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'rxjs/operators'</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">function</span> useLazyAsync<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span> <span class=\"token operator\">=</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span>\n  asyncFunc<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> Promise<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>T</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">,\n  deps?: any[] = []\n) </span><span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> asyncSubject <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Subject</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>asyncState<span class=\"token punctuation\">,</span> setAsyncState<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> loading<span class=\"token punctuation\">:</span> <span class=\"token boolean\">false</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token comment\">// Setup the subject</span>\n  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token keyword\">async</span>$ <span class=\"token operator\">=</span> asyncSubject\n      <span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span>\n        <span class=\"token function\">switchMap</span><span class=\"token punctuation\">(</span>val <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n          <span class=\"token function\">setAsyncState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token operator\">...</span>asyncState<span class=\"token punctuation\">,</span> loading<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n          <span class=\"token keyword\">return</span> <span class=\"token keyword\">from</span><span class=\"token punctuation\">(</span>asyncFunc<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">subscribe</span><span class=\"token punctuation\">(</span>\n        result <span class=\"token operator\">=></span>\n          <span class=\"token function\">setAsyncState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n            <span class=\"token operator\">...</span>asyncState<span class=\"token punctuation\">,</span>\n            error<span class=\"token punctuation\">:</span> undefined<span class=\"token punctuation\">,</span>\n            result<span class=\"token punctuation\">,</span>\n            loading<span class=\"token punctuation\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        err <span class=\"token operator\">=></span>\n          <span class=\"token function\">setAsyncState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token operator\">...</span>asyncState<span class=\"token punctuation\">,</span> error<span class=\"token punctuation\">:</span> err<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">,</span> loading<span class=\"token punctuation\">:</span> <span class=\"token boolean\">false</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">async</span>$<span class=\"token punctuation\">.</span>unsubscribe\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span> <span class=\"token operator\">...</span>asyncState<span class=\"token punctuation\">,</span> <span class=\"token keyword\">async</span>$<span class=\"token punctuation\">:</span> asyncSubject <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Now all the loading states and error handling can be offloaded onto the hook, and the component can just rely on the state values returned by <code class=\"language-text\">useLazyAsync</code>.</p>\n<p>I’m not sure if this is an anti pattern, or if there are better ways to do it, but if I come across any manjor downsides, I’ll update this post.</p>\n<p>Credit to <a href=\"https://github.com/EricHenry\">@erichenry</a> for helping me with this implementation.</p>","frontmatter":{"title":"Async Hooks with Observables","date":"February 28, 2019","path":"/blog/async-hooks-with-observables/"},"fields":{"slug":"/blog/2019-02-28-async-hooks/"}}},"pageContext":{"slug":"/blog/async-hooks-with-observables/","previous":{"fields":{"slug":"/blog/2019-02-24-first-post/"},"frontmatter":{"title":"First Post","path":"/blog/first-post/"}},"next":null}}